{"version":3,"sources":["config.js","src/pages/main.js"],"names":["BASE_URL","POSTS_URL","layout","document","getElementById","postList","template","View","length","posts","i","push","title","content","replace","join","innerHTML","get","path","url","fetch","response","json","data","ok","Error","then","render","console","log","catch","error"],"mappings":";;ACAA;AAAsD;AAAA;AAAA,+CACtD;ADAO,ACAP,IDAaA,QAAQ,GAAG,uBAAuB;AAAC,ACAhD;ADCO,ACDP,IDCaC,SAAS,GAAGD,QAAQ,GAAG,QAAQ;AAC5C,ACFA;AAAA;ADKA,ACLA;ADMA,ACNA;ADOA,ACPA;ADQA,ACPA,IAAME,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;ADQhD,ACPA,IAAIC,QAAQ,GAAG,EAAE;ADQjB,ACPA,IAAIC,QAAQ,kYAaX;ADLD,ACKE,IAEIC,IAAI;ADNV,ECMU;ADLV,ICKU;ADJV,ECIU;ADHV,ECGU;ADFV,ICEU;IAAA,OACR,gBAAcC,MAAM,EAAEC,KAAK,EAAE;ADD/B,MCEI,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,EAAEE,CAAC,EAAE,EAAE;ADDrC,QCEML,QAAQ,CAACM,IAAI,2PAKGF,KAAK,CAACC,CAAC,CAAC,CAACE,KAAK,uCACnBH,KAAK,CAACC,CAAC,CAAC,CAACG,OAAO,mEAIzB;ADXR,MCYI;ADXJ,MCYIP,QAAQ,GAAGA,QAAQ,CAACQ,OAAO,CAAC,mBAAmB,EAAET,QAAQ,CAACU,IAAI,CAAC,EAAE,CAAC,CAAC;ADXvE,MCYIb,MAAM,CAACc,SAAS,GAAGV,QAAQ;ADX/B,ICYE;EAAC;ADVH,ECUG;ADTH,ACSG;ADRH,ACQG,SAGYW,GAAG;ADVlB,ECUkB;ADTlB,ACSkB,EAWlB;ADnBA,ACmBA;ADlBA,ECkBA,kEAXA,iBAAmBC,IAAI;ADPvB,ICOuB;IAAA;MAAA;QAAA;UAAA;YACrB;YACMC,GAAG,GAAGlB,iBAAS;YAAA;YAAA,OAEEmB,KAAK,CAACD,GAAG,CAAC;UAAA;YAA3BE,QAAQ;YAAA;YAAA,OACKA,QAAQ,CAACC,IAAI,EAAE;UAAA;YAA5BC,IAAI;YAAA,KAENF,QAAQ,CAACG,EAAE;cAAA;cAAA;YAAA;YAAA,iCAASD,IAAI;UAAA;YAAA,MACjBE,KAAK,CAACF,IAAI,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACvB;EAAA;AAAA;AAGDN,GAAG,CAAC,OAAO,CAAC,CACTS,IAAI,CAAC,UAAAH,IAAI,EAAI;EACZ,IAAIf,MAAM,GAAGe,IAAI,CAACA,IAAI,CAACd,KAAK,CAACD,MAAM;EACnC,IAAIC,KAAK,GAAGc,IAAI,CAACA,IAAI,CAACd,KAAK;EAC3BF,IAAI,CAACoB,MAAM,CAACnB,MAAM,EAAEC,KAAK,CAAC;EAC1BmB,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEN,IAAI,CAAC;AACzB,CAAC,CAAC,CACDO,KAAK,CAAC,UAAAC,KAAK;EAAA,OAAIH,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEE,KAAK,CAAC;AAAA,EAAC","file":"main.33d633b7.js","sourceRoot":"..","sourcesContent":["\nexport const BASE_URL = \"http://43.201.103.199\";\nexport const POSTS_URL = BASE_URL + \"/posts\";\n// export const POST_URL = BASE_URL + \"/post/:@postId\";\n\n\n// async function post(path, body, headers = {}) {\n//   const url = BASE_URL + `/${path}`;\n//   const options = {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       ...headers,\n//     },\n//     body: JSON.stringify(body),\n//   };\n//   const res = await fetch(url, options);\n//   const data = await res.json();\n  \n//   if (res.ok) {\n//     return data;\n//   } else {\n//     throw Error(data);\n//   }\n// }\n\n// post(\"posts\", {\n//   title: \"Test\",\n//   body: \"I am testing!\",\n//   userId: 1,\n// })\n//   .then((data) => console.log(data))\n//   .catch((error) => console.log(error));\n","import BASE_URL, { POSTS_URL } from \"../../config.js\";\n\nconst layout = document.getElementById(\"layout\");\nlet postList = [];\nlet template = `\n      <div class=\"header\">\n        <h2>what's your 2023 message ?</h2>\n      </div>\n      <div class=\"createPost\">\n        <a class=\"newPost\" href=\"\">\n          <img class=\"pencil\" src=\"https://cdn-icons-png.flaticon.com/512/650/650143.png\">\n        new post\n        </a>\n      </div>\n      <ul class=\"postList\">\n          {{__post_list__}}\n      </ul>\n`;\n\nclass View {\n  static render(length, posts) {\n    for (let i = 0; i < length; i++) {\n      postList.push(`\n      <li class = \"post\">\n        <a class = \"innerPost\" href=\"\">\n          <img class=\"randomImg\" src=\"https://blog.kakaocdn.net/dn/Of181/btq4ID0fTeT/wftn2VI2aeYhGzarOLHn50/img.jpg\">\n          <article>\n            <strong>${posts[i].title}</strong>\n            <p>${posts[i].content}</p>\n          </article>\n        </a>\n      </li>\n      `);\n    }\n    template = template.replace(\"{{__post_list__}}\", postList.join(\"\"));\n    layout.innerHTML = template;\n  }\n}\n\nasync function get(path) {\n  // const url = BASE_URL + `/${path}`;\n  const url = POSTS_URL;\n\n  const response = await fetch(url);\n  const data = await response.json();\n\n  if (response.ok) return data;\n  else throw Error(data);\n}\n\n//실행부\nget(\"posts\")\n  .then(data => {\n    let length = data.data.posts.length;\n    let posts = data.data.posts;\n    View.render(length, posts);\n    console.log(\"성공\", data);\n  })\n  .catch(error => console.log(\"에러\", error));\n"]}