{"version":3,"sources":["src/pages/main.js","config.js","src/cores/api.js","src/pages/newPost.js","src/pages/postContent.js","src/cores/router.js","src/app.js"],"names":["layout","document","getElementById","postList","template","MainView","length","posts","i","push","title","content","replace","join","innerHTML","BASE_URL","POSTS_URL","POST_URL","Api","url","fetch","response","json","data","ok","Error","body","options","method","headers","JSON","stringify","text","NewPostView","upload","form","querySelector","onsubmit","e","preventDefault","formData","FormData","image","key","value","console","log","post","then","catch","error","imageInformation","postInformation","PostContentView","date","location","href","Router","routePath","hash","get","render","includes","split","updatedAt","slice","replaceAll","window","addEventListener","route"],"mappings":";;AMAA;AAEAmE,MAAM,CAACC,gBAAgB,CAAC,YAAY,EAAEX,cAAM,CAACY,KAAK,CAAC;AACnDZ,cAAM,CAACY,KAAK,EAAE;;ALFP,ACDP,AGAA,AFAA,IFCatD,QAAQ,GAAG,uBAAuB;AAAC,ACDM,AGCtD,AFDmC;AFE5B,ACF+C,AGEtD,AFFmC,IFEtBC,SAAS,GAAGD,QAAQ,GAAG,QAAQ,YCD5C;ADC6C,ACD7C,AGEA,AFHmC;AFG5B,ACFP,AGE4B,AFHO,IFGtBE,QAAQ,GAAG,4BAA4B;AAAC,ACFrD,AGE4B,AFHO;ADCnC,AGE4B,ALH5B,AGAmC,ACAnC,IJAMjB,AIAAA,MJAM,AIAA,GJAGC,AIAAA,QJAQ,AIAA,CJACC,AIAAA,cJAc,AIAA,CJAC,AIAA,QJAQ,AIAA,CJAC,AIAA;AFChD,AGE4B,ALF5B,AGDmC,ACCnC,IJAIC,AIAAgD,QJAQ,GAAG,EAAE,GIAG,GAAG,EAAE;AFAzB,AGE4B,ALD5B,AGFmC,ACEnC,IJAI/C,AIAAgD,QJAQ,OIAO,GAAG,EAAE,+XJavB;AEdD,AGE4B,ALY1B,AGfiC,ACGnC,IJca/C,AIdTD,QJciB,AIdT,0uBA6BX;AF/BD,AGE4B,AFHO,ACgCjC,EJfmB,EEfRc,AGGAuC,AD6BAJ,GFhCG,GGGG,SD6BS;ADlCO,EDEnB,AGGG,AD6BS,EJjBP;AGjBc,EHiBd,EEfL,AGGG,AD6BS;ADlCO,EDEnB,AGGG,ALYE,AIiBO;ADlCO,EDEnB,AGGG,AD6BS,EJjBP;AGjBc,IDEnB,AGGG,ALYE,AIiBO,OJhB1B,gBAAc/C,MAAM,EAAEC,KAAK,EAAE;AGlBI,IDEnB,AGGG,AD6BS,EJfxB,KKbF,ALaO,AIgBP,IJhBWC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CIgBRI,CC7BC,ILaa,AIgBT,EJhBWF,AIgBTG,CJhBU,EAAE,EAAE,EIgBP,EAAE+B,KAAK,EAAEY,IAAI,EAAE;ADlC7C,IAAMtD,EDCU,AGKZ,AD6BAA,EJhBEG,EKbIuD,AFNE,ECmCF,CDnCKzD,ACmCJa,GJhBG,CAACL,EKbI,ELaA,AGnBI,CEMD8C,AFNErD,ACmCJ,GAAGE,KC7BO,CAACuD,ED6BA,EC7BI,CFNG,CAAC,QAAQ,CAAC,8BDE9C,sCFmBgDpD,KAAK,CAACC,CAAC,CAAC,CAACE,KAAK,cAAIF,CAAC,sLAG/CD,KAAK,CAACC,CAAC,CAAC,CAACE,KAAK,uCACnBH,KAAK,CAACC,CAAC,CAAC,CAACG,OAAO,mEAIzB;AG3BR,IAAIP,EEMA,ALsBA,AIMAH,EFlCF,EGMMyD,EFNI,ECkCA,CAAChD,IC5BI,CD4BC,IC5BI,EAAE,EAAE,KD4BFA,KAAK,CAAE,4/BDA9B;AAAC,IAEWuB,EHPT7B,AIOAgD,EFpCF,AGOIlC,MLsBM,CGOY,CE7Bf,CAAC0C,ALsBKxD,GKtBF,CD6BM,CC7BJ,AD6BKK,CC5BXuC,ELqBc,CAACpC,AIOA,CC5BX,CAAC,KLqBiB,CAAC,IKrBlBW,IAAI,EAAI,SLqB6B,EAAEpB,QAAQ,CAACU,AIQrCyC,IJRyC,AIQrC,CJRsC,EAAE,CAAC,CAAC,0CIS9C5C,KAAK,2CACPC,OAAO,gBACxB;EDJkB,IHNpBX,AIWAmD,IFzCF,AGSQ,ELqBA,CAACrC,CKrBGR,MAAM,ELqBA,AIWA,CChCGiB,ADgCFd,EJXEL,EKrBI,ADgCF,CChCGmB,IAAI,CAAChB,ALqBF,KKrBO,CAACD,MAAM,8CDmChCoC,KAAK,kBACR;IDTc,EHLpB,AIgBAtC,ICrCM,EHVR,EGUYG,ADqCF,GAAGH,ECrCI,GAAGmB,GDqCC,CCrCG,ADqCFX,CCrCGW,IAAI,CAAChB,CDqCD,CACzB,GCtC+B,uBDsCL,EAC1B6C,eAAe,CAACvC,IAAI,CAAC,EAAE,CAAC,CACzB;EDdmB,EHJtB,EImBET,ICxCMC,IHXR,AEmDU,GAAGD,OCxCG,CAACyD,ADwCI,CAACjD,KCxCC,CAACN,CDwCK,CACzB,ICzC0B,EAAEC,KAAK,CAAC,QDyCd,EACpB4C,gBAAgB,CAACtC,IAAI,CAAC,EAAE,CAAC,CAC1B;EJtBF,AGIqB,ICmBpBb,IC3CM6C,ED2CA,CAAC/B,GFtDDK,CGWO,CAAC2B,CHXL,EGWQ,CHXL9B,AGWM,AD2CF,GAAGZ,CC3CG,EAAEmB,IAAI,CAAC,AD2CF,MFtDN;EF+BtB,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","file":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["const layout = document.getElementById(\"layout\");\nlet postList = [];\nlet template = `\n      <div class=\"header\">\n        <h2>what's your 2023 message ?</h2>\n      </div>\n      <div class=\"createPost\">\n        <a class=\"newPost\" href=\"#/newpost\">\n          <img class=\"pencil\" src=\"https://cdn-icons-png.flaticon.com/512/650/650143.png\">\n        new post\n        </a>\n      </div>\n      <ul class=\"postList\">\n          {{__post_list__}}\n      </ul>\n`;\n\nexport class MainView {\n  static render(length, posts) {\n    for (let i = 0; i < length; i++) {\n      postList.push(`\n      <li class = \"post\">\n        <a class = \"innerPost\" href=\"#/postlist/${posts[i].title}/${i}\">\n          <img class=\"randomImg\" src=\"https://blog.kakaocdn.net/dn/Of181/btq4ID0fTeT/wftn2VI2aeYhGzarOLHn50/img.jpg\">\n          <article>\n            <strong>${posts[i].title}</strong>\n            <p>${posts[i].content}</p>\n          </article>\n        </a>\n      </li>\n      `);\n    }\n    template = template.replace(\"{{__post_list__}}\", postList.join(\"\"));\n    layout.innerHTML = template;\n    // document.querySelector(\"link\").setAttribute(\"href\", \"src/css/main.scss\");\n  }\n}\n","\nexport const BASE_URL = \"http://43.201.103.199\";\nexport const POSTS_URL = BASE_URL + \"/posts\";\nexport const POST_URL = \"http://43.201.103.199/post\";\n","import { POSTS_URL, POST_URL } from \"../../config.js\";\n\nexport class Api {\n  static async get() {\n    const url = POSTS_URL;\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (response.ok) return data;\n    else throw Error(data);\n  }\n\n  static async post(body) {\n    const url = POST_URL;\n    const options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    };\n    const response = await fetch(url, options);\n    const data = await response.text();\n\n    if (response.ok) {\n      // console.log(\"응답 정상\");\n      return data;\n    } else {\n      // console.log(\"에러~!~!!~\", Error(data));\n      throw Error(data)\n    }\n  }\n}\n","import { Api } from \"../cores/api\";\nconst layout = document.getElementById(\"layout\");\n\nlet template = `\n  <div class=\"header\">\n    <a href=\"#\">\n      <img\n        class=\"arrowIcon\"\n        src=\"https://cdn-icons-png.flaticon.com/512/271/271220.png\"\n      />\n    </a>\n    <h2>HPNY 2023</h2>\n  </div>\n  <main class=\"main\">\n    <form>\n      <button name=\"image\" class=\"newImg\" href=\"\">랜덤이미지 추가하기</button>\n      <div class=\"post\">\n        <h3>Title</h3>\n        <input\n          name=\"title\"\n          class=\"inputTitle\"\n          type=\"text\"\n          placeholder=\"글 제목을 작성해주세요.\"\n        />\n      </div>\n      <div class=\"post\">\n        <h3>Content</h3>\n        <textarea\n          name= \"content\"\n          class=\"content\"\n          type=\"text\"\n          placeholder=\"글 내용을 작성해주세요.\"\n        ></textarea>\n      </div>\n      <button class=\"upload\" type=\"submit\" href=\"\">게시하기</button>\n    </form>  \n  </main>\n`;\n\nexport class NewPostView {\n  static render() {\n    layout.innerHTML = template;\n    document.title = \"새 포스트 작성\";\n    // document.querySelector(\"link\").setAttribute(\"href\", \"src/css/newPost.scss\");\n    this.upload();\n  }\n\n  static upload() {\n    const form = document.querySelector(\"form\");\n    form.onsubmit = e => {\n      e.preventDefault();\n      let formData = new FormData(form);\n      let body = { image: \"https://blog.kakaocdn.net/dn/Of181/btq4ID0fTeT/wftn2VI2aeYhGzarOLHn50/img.jpg\" }; // image : 더미데이터\n      for (let [key, value] of [...formData]) {\n        body[key] = value;\n      }\n\n      console.log(\"formData: \", formData);\n      console.log(\"formData: \", [...formData]); // [['title', 'dd'], ['content', 'dd']]\n\n      Api.post(body)\n        .then(response => console.log(\"성공. post결과 : \", response))\n        .catch(error => console.log(\"에러 : \", error));\n    };\n  }\n}\n","const layout = document.getElementById(\"layout\");\nlet imageInformation = [];\nlet postInformation = [];\nlet template = `\n  <div class=\"header\">\n    <a href=\"#\">\n      <img\n        class=\"arrowIcon\"\n        src=\"https://cdn-icons-png.flaticon.com/512/271/271220.png\"\n      />\n    </a>\n    <h2>HPNY 2023</h2>\n  </div>\n  <main>\n    <article>\n      {{__post_image__}}\n      <div class=\"content\">\n        {{__post_information__}}\n        <div class=\"icons\">\n          <image\n            class=\"icon\"\n            src=\"https://cdn-icons-png.flaticon.com/512/7175/7175385.png\"\n          />\n          <image\n            class=\"icon\"\n            src=\"https://cdn-icons-png.flaticon.com/512/7945/7945112.png\"\n          />\n        </div>\n      </div>\n    </article>\n    <section>댓글자리</section>\n  </main>\n`;\n\nexport class PostContentView {\n  static render(title, content, image, date) {\n    layout.innerHTML = template;\n    document.title = `${title}`;\n\n    postInformation.push(`\n      <span id=\"clock\">${date}</span>\n      <h2 id = \"title\">${title}</h2>\n      <p id = \"text\">${content}</p>\n    `);\n    imageInformation.push(`\n      <image\n      class=\"postImg\"\n      src=\"${image}\"\n      />`);\n\n    template = template.replace(\n      \"{{__post_information__}}\",\n      postInformation.join(\"\")\n    );\n    template = template.replace(\n      \"{{__post_image__}}\",\n      imageInformation.join(\"\")\n    );\n    layout.innerHTML = template;\n    location.href = location.href;\n        // location.reload();\n  }\n}","import { MainView } from \"../pages/main\";\nimport { NewPostView } from \"../pages/newPost\";\nimport { PostContentView } from \"../pages/postContent\";\nimport { Api } from \"./api\";\n\nexport class Router {\n  static route() {\n    const routePath = location.hash;\n\n    if (routePath === \"\") {\n      Api.get()\n        .then(data => {\n          let length = data.data.posts.length;\n          let posts = data.data.posts;\n          MainView.render(length, posts);\n          console.log(\"성공\", data);\n        })\n        .catch(error => console.log(\"에러\", error));\n    } \n    else if (routePath.includes(\"#/postlist/\")) {\n      const i = routePath.split(\"/\")[3];\n      Api.get().then(data => {\n        let title = data.data.posts[i].title;\n        let content = data.data.posts[i].content;\n        let image = data.data.posts[i].image;\n        let date = data.data.posts[i].updatedAt.slice(0, 10).replaceAll('-', '.');\n        \n        PostContentView.render(title, content, image, date);\n        console.log(\"성공\", data);\n      });\n    } \n    else if (routePath.includes(\"#/newpost\")) {\n      NewPostView.render();\n    }\n  }\n}","import { Router } from \"./cores/router\";\n\nwindow.addEventListener(\"hashchange\", Router.route);\nRouter.route();"]}